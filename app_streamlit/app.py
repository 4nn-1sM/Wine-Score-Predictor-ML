import streamlit as st
import pandas as pd
import numpy as np
import pickle
import sys
import os
sys.path.append(os.path.abspath('../src'))
import utils  ### TODO: Intentar que sea relative path


# Cargar el modelo pre-entrenado
model = pickle.load(open('../models/final_model.pkl', 'rb'))

# Cargar diccionario de opciones para botones
dict_clasif = pickle.load(open("../src/options_dict.pkl", 'rb'))
style_dict = dict_clasif["style"].keys()
style_dict = list(style_dict)[:-1]
variety_dict = dict_clasif["style"]
winery_dict = dict_clasif["wineries"]
denominacion_dict = dict_clasif["denominacion"]
aging_dict = dict_clasif["aging"]
aging_dict.append("Ninguna de las anteriores")


# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Wine Score", layout="centered")
st.markdown("<style>body {background-color: #7B1E44;}</style>", unsafe_allow_html=True)

# T√≠tulo de la aplicaci√≥n
st.title("üé®üç∑ Wine Score: ¬øQu√© puntuaci√≥n tendr√≠a este vino en una cata a ciegas?")

 # imagen o visualizaci√≥n
st.image("../docs/imagen_streamlit.png")

# Introducci√≥n
st.write("""
¬øAlguna vez te has preguntado qu√© puntuaci√≥n recibir√≠a un vino en una cata a ciegas? 
Con esta aplicaci√≥n, podr√°s predecir el rango de calidad en el que podr√≠a clasificarse 
un vino bas√°ndonos en sus caracter√≠sticas clave. ¬°D√©jate guiar por nuestra herramienta 
y explora el fascinante mundo de la enolog√≠a!
""")
    
# Escala de calidad
st.header("Escala de Calidad")

st.markdown("""
Cuando la app predice la puntuaci√≥n de un vino, lo clasifica en uno de los siguientes rangos de calidad:

- üèÜ **Cl√°sico**: *El pin√°culo de la calidad.*  
    **Puntuaci√≥n:** 98-100  
    Un vino excepcional que define la excelencia en la enolog√≠a. Perfecto para coleccionistas y ocasiones especiales.

- üåü **Excepcional**: *Un gran logro.*  
    **Puntuaci√≥n:** 94-97  
    Un vino sobresaliente que no puede faltar en la mesa de los conocedores.

- ‚úÖ **Excelente**: *Altamente recomendado.*  
    **Puntuaci√≥n:** 90-93  
    Un vino de gran calidad, ideal para quienes buscan algo especial.

- üçá **Muy bueno**: *A menudo buena relaci√≥n calidad-precio; bien recomendado.*  
    **Puntuaci√≥n:** 87-89  
    Una opci√≥n destacada para disfrutar en compa√±√≠a o para una ocasi√≥n casual.

- üç∑ **Bueno**: *Adecuado para el consumo diario, a menudo buena relaci√≥n calidad-precio.*  
    **Puntuaci√≥n:** 83-86  
    Un vino que cumple, perfecto para el d√≠a a d√≠a sin sacrificar calidad.

- üçÇ **Aceptable**: *Puede ser empleado.*  
    **Puntuaci√≥n:** 80-82  
    Aunque modesto, este vino puede complementar tus comidas sin grandes pretensiones.

- ‚ùì **Sin calificar**:  
    Por debajo de 80 puntos, este vino no alcanza los est√°ndares para recibir una calificaci√≥n destacada.
""")

# Cierre inspirador
st.write("‚ú® **Introduce las caracter√≠sticas del vino y descubre en qu√© rango de calidad podr√≠a encontrarse. ¬°Que comience la experiencia enol√≥gica!** üç∑")

# Selecci√≥n de pa√≠s
country = st.selectbox("Pa√≠s de origen", options= ['Espa√±a']) #['Francia', 'Italia', 'Espa√±a', 'Portugal']

# Selecci√≥n de estilo de vino
style = st.radio("Estilo de vino", options=style_dict)
winery = st.selectbox("Bodega", options= list(winery_dict))
if style:
    variety = st.selectbox("Variedad de uva", options= variety_dict[style])
denominacion = st.selectbox("Denominaci√≥n de origen / Denominaci√≥n geogr√°fica", options= list(denominacion_dict))
aging = st.radio("Clasificaci√≥n", options= list(aging_dict))
year = st.slider("A√±o de cosecha", min_value=1900, max_value=2023, step=1)
price = st.number_input("Precio estimado", min_value=0.0)


# Bot√≥n para realizar la predicci√≥n
if st.button("Predecir valoraci√≥n"):
    # Preprocesar los datos
    input_data = pd.DataFrame({
        'vintage': [year],
        'winery': [winery],
        'style': [style],
        'variety': [variety],
        'denominacion': [denominacion],
        'price': [price],
        'aging_1': [aging],
    })

    # Realizar la predicci√≥n
    prediction = model.predict(input_data)
    pred_num= prediction[0]   
    print("Valor", pred_num)
    category = utils.categorize_points(pred_num)
    print("Categor√≠a ", category)


    # Resultado de la clasificaci√≥n
    st.subheader("üç∑ ¬°Aqu√≠ est√° el resultado de tu vino!")
    
    # Mensaje final despu√©s de mostrar la clasificaci√≥n
    st.write(f"""
    üéâ **¬°Felicidades!** Seg√∫n sus caracter√≠sticas, tu vino podr√≠a clasificarse como: 
              
    **{category}**  

    Esta predicci√≥n refleja c√≥mo podr√≠a ser percibido en una cata a ciegas.  

    Ya sea un vino cl√°sico digno de coleccionistas o una opci√≥n m√°s modesta para el d√≠a a d√≠a, cada vino tiene su momento especial.  

    ‚ú® **Ahora es tu turno de disfrutarlo y compartirlo!**  
    
    ¬øQui√©n sabe? Tal vez este vino sea la estrella de tu pr√≥xima reuni√≥n o el compa√±ero perfecto para un momento tranquilo.
    """)

    # Sugerencia adicional
    st.write("üçá Si tienes otro vino en mente, ¬°introduce sus datos y descubre qu√© puntuaci√≥n podr√≠a alcanzar!")




# para abrir en terminal: streamlit run nombre_app.py